package main

import (
	"context"
	"fmt"
	"log"
	"os"

	"github.com/jackc/pgx/v5"
)

func main() {
	ctx := context.Background()

	conn, err := pgx.Connect(ctx, os.Getenv("DATABASE_URL"))
	if err != nil {
		log.Fatal(err)
	}
	defer conn.Close(ctx)

	_, err = conn.Exec(ctx, `
		create temporary table users (
			id int primary key generated by default as identity,
			name text not null,
			email text not null
		)`)
	if err != nil {
		log.Fatal(err)
	}

	tx, err := conn.Begin(ctx)
	if err != nil {
		log.Fatal(err)
	}

	_, err = tx.Exec(ctx, `insert into users (name, email) values
			('Matthew', 'matthew@example.com')`)
	if err != nil {
		log.Fatal(err)
	}

	tx2, err := tx.Begin(ctx)
	if err != nil {
		log.Fatal(err)
	}

	_, err = tx2.Exec(ctx, `insert into users (name, email) values
			('Mark', 'mark@example.com')`)
	if err != nil {
		log.Fatal(err)
	}

	err = tx2.Rollback(ctx)
	if err != nil {
		log.Fatal(err)
	}

	err = tx.Commit(ctx)
	if err != nil {
		log.Fatal(err)
	}

	var n int32
	err = conn.QueryRow(ctx, "select count(*) from users").Scan(&n)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println(n) // => 1
}
