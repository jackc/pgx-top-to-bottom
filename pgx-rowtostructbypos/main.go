package main

import (
	"context"
	"fmt"
	"log"
	"os"

	"github.com/jackc/pgx/v5"
)

func main() {
	ctx := context.Background()

	conn, err := pgx.Connect(ctx, os.Getenv("DATABASE_URL"))
	if err != nil {
		log.Fatal(err)
	}
	defer conn.Close(ctx)

	_, err = conn.Exec(ctx, `
		create temporary table users (
			id int primary key generated by default as identity,
			name text not null,
			email text not null
		)`)
	if err != nil {
		log.Fatal(err)
	}

	_, err = conn.Exec(ctx, `
		insert into users (name, email) values
			('Matthew', 'matthew@example.com'),
			('Mark', 'mark@example.com'),
			('Luke', 'luke@example.com'),
			('John', 'john@example.com'),
			('Mary', 'mary@example.com'),
			('Martha', 'martha@example.com')`)
	if err != nil {
		log.Fatal(err)
	}

	type User struct {
		ID    int32
		Name  string
		Email string
	}

	rows, _ := conn.Query(ctx, "select id, name, email from users")
	users, err := pgx.CollectRows(rows, pgx.RowToStructByPos[User])
	if err != nil {
		log.Fatal(err)
	}

	for _, user := range users {
		fmt.Println(user)
	}

	// Output:
	//
	// {1 Matthew matthew@example.com}
	// {2 Mark mark@example.com}
	// {3 Luke luke@example.com}
	// {4 John john@example.com}
	// {5 Mary mary@example.com}
	// {6 Martha martha@example.com}
}
